generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id             String  @id @default(uuid())
  username       String  @unique
  imageUrl       String  @db.String()
  externalUserId String  @unique @db.String()
  bio            String? @db.String()

  createdAt DateTime @default(now())

  following Follow[] @relation("Following")
  follower  Follow[] @relation("FollowedBy")
  blocking  Block[]  @relation("Blocking")
  blockedBy Block[]  @relation("BlockedBy")
  stream    Stream?
  updatedAt DateTime @updatedAt
}

model Follow {
  id          String @id @default(uuid())
  followerId  String
  followingId String

  follower User @relation(name: "Following", fields: [followerId], references: [id], onDelete: Cascade)

  following User     @relation(name: "FollowedBy", fields: [followingId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([followerId, followingId])
  @@index([followerId])
  @@index([followingId])
}

model Block {
  id        String @id @default(uuid())
  blockerId String
  blockedId String

  blocker User @relation(name: "Blocking", fields: [blockerId], references: [id], onDelete: Cascade)
  blocked User @relation(name: "BlockedBy", fields: [blockedId], references: [id], onDelete: Cascade)

  @@unique([blockerId, blockedId])
  @@index([blockerId])
  @@index([blockedId])
}

model Stream {
  id           String  @id @default(uuid())
  name         String  @db.String()
  thumbnailUrl String? @db.String()

  ingressId String? @unique
  serverUrl String? @db.String()
  streamKey String? @db.String()

  isLive              Boolean @default(false)
  isChatEnabled       Boolean @default(true)
  isChatDelayed       Boolean @default(false)
  isChatFollowersOnly Boolean @default(false)

  // relations

  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([ingressId])
}
